@using BitcoinPriceTracking.BE.Shared.Services

@code {
    protected HttpClient? _httpClient;
    [Inject]
    protected IEventLogService? _eventLogService { get; set; }
    [Inject]
    private IHttpClientFactory? _httpClientFactory { get; set; }

    protected override void OnInitialized()
    {
        try
        {
            if (_httpClientFactory != null)
                _httpClient = _httpClientFactory.CreateClient("ApiClient");
        }
        catch (Exception ex)
        {
            _eventLogService?.LogError(Guid.Parse("24cd2c19-6a7f-48b3-9533-e7981d87b63e"), ex);
        }
    }

    protected virtual async Task<T?> loadData<T>(string urlApi)
    {
        if (_httpClient != null)
        {
            var response = await _httpClient.GetAsync(urlApi);

            if (response != null && response.StatusCode == System.Net.HttpStatusCode.OK)
            {
                return await response.Content.ReadFromJsonAsync<T>();
            }
        }
        return default;
    }
}
