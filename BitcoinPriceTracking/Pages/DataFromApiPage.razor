@page "/data-from-api"
@using BitcoinPriceTracking.BE.BusinessLogic.Models
@using BitcoinPriceTracking.BE.Shared.Models.DTOs
@using BitcoinPriceTracking.Data
@using System.Reflection
@using BitcoinPriceTracking.Enums
@using BitcoinPriceTracking.FE.Components
@using System.Net.Http.Json

 @inherits BasePage

<PageTitle>Data from API</PageTitle>
<h1>Data form API</h1>

<style>
    .tabs button {
        padding: 10px 20px;
        margin-right: 5px;
        cursor: pointer;
    }

    .active-tab {
        background-color: #007bff;
        color: white;
    }

    .tab-content {
        margin-top: 20px;
    }
</style>

<ul class="nav nav-tabs" id="myTab" role="tablist">
    <li class="nav-item" role="presentation">
        <button class="@getTabClass(eTab.CryptoData)" @onclick="() => selectTab(eTab.CryptoData)">CRYPTO DATA</button>
    </li>
    <li class="nav-item" role="presentation">
        <button class="@getTabClass(eTab.CnbData)" @onclick="() => selectTab(eTab.CnbData)">ČNB DATA</button>
    </li>
</ul>

<div class="tab-content mt-3">
    @if (selectedTab == eTab.CryptoData)
    {
        <p>Zobrazuje surová data z https://data-api.coindesk.com/spot/v1/latest/tick?market=coinbase&instruments=BTC-EUR</p>
        <button @onclick="addAddCryptoDataToDb_Click">Add actual data to database</button>
        @if (_cryptoDataDto == null)
        {
            <p><em>Loading...</em></p>
        }
        else
        {
            <MTableForProperty Item="_cryptoDataDto" />
        }
    }
    else if (selectedTab == eTab.CnbData)
    {
        <p>Zobrazuje surová data z https://www.cnb.cz//cs/financni-trhy/devizovy-trh/kurzy-devizoveho-trhu/kurzy-devizoveho-trhu/denni_kurz.xml</p>
        @if (_cnbDataDto == null)
        {
            <p><em>Loading...</em></p>
        }
        else
        {
            <MTableForProperty Item="_cnbDataDto" />
        }
    }
</div>

@code {
    private eTab selectedTab = eTab.CryptoData;

    private CryptoDataBaseDTO? _cryptoDataDto;
    private PropertyInfo[]? _cryptoDataDtoProperties = Array.Empty<PropertyInfo>();

    private kurzy? _cnbDataDto;
    private PropertyInfo[]? _cnbDataDtoProperties = Array.Empty<PropertyInfo>();

    protected override async Task OnInitializedAsync()
    {
        try
        {

            _cryptoDataDto = await loadData<CryptoDataBaseDTO>("api/v1/crypto-data/buffer/BTC-EUC");
            _cnbDataDto = await loadData<kurzy>("api/v1/cnb-data/buffer");
            StateHasChanged();
        }
        catch (Exception ex)
        {
            var test = ex;
        }
    }

    private string getTabClass(eTab tab) => tab == selectedTab ? "active-tab" : "";

    private void selectTab(eTab tab)
    {
        selectedTab = tab;
    }

    private async void addAddCryptoDataToDb_Click()
    {
        if (_httpClient != null)
        {
            var result = await _httpClient.PostAsJsonAsync<CryptoDataBaseDTO>("/api/v1/crypto-data", _cryptoDataDto);
        }
    }
}
